DECLARE @EndDate DATE = '2020-12-31';

WITH CTE_DATE
AS (
	SELECT a.DATE
		,b.*
	FROM DataVault.HUB_DATE a
	JOIN (
		SELECT *
			,CASE 
				WHEN RANK() OVER (
						PARTITION BY HK_DATE ORDER BY LOAD_DATETIME DESC
						) = 1
					THEN 'Y'
				ELSE 'N'
				END CURR_FLAG
		FROM DataVault.SAT_DATE_WORKING_DAYS
		) b ON a.HK_DATE = b.HK_DATE
	WHERE b.CURR_FLAG = 'Y'
	)
	,CTE1
AS (
	SELECT DISTINCT h b_cs.HK_CASE_STAGE
		,thc.CASE_HEADER_ID
		,b_cs.CASE_REFERENCE
		,b_cs.CASE_PHASE_HISTORY_ID
		,b_cs.CASE_STAGE_CREATED_DATE PHASE_CREATED_DATE
		,cph.END_DATE PHASE_END_DATE
		,b_cs.CASE_STAGE_TYPE
		--,cph.END_DATE
		,CAST(thc.DATE_ASSIGNED AS DATE) AS THEME_CASE_DATE_ASSIGNED
		,thc.DATE_REMOVED AS THEME_CASE_DATE_REMOVED
		,th.THEME_TITLE
		,SUBSTRING(th.THEME_TITLE, 1, 11) LEAD_OR_CHILD_CASE_REFERENCE
		,CASE 
			WHEN b_cs.CASE_REFERENCE = SUBSTRING(th.THEME_TITLE, 1, 11)
				THEN 1
			ELSE 0
			END AS IS_LEAD_CASE
		,thc.IS_DELETED IS_THEME_CASE_DELETED_NOW
		,IIF(thc.DATE_ASSIGNED < cph.end_Date
			OR cph.end_Date IS NULL, thc.DATE_ASSIGNED, NULL) DATE_THEME_ASSIGNED_ADJUSTED --and Theme assigned before the Phase End Date or Phase End Date is null
		,IIF(thc.DATE_REMOVED > cph.end_Date
			OR thc.DATE_REMOVED IS NULL, CAST('99991231' AS DATETIME2), thc.DATE_REMOVED) DATE_THEME_REMOVED_ADJUSTED -- Date Theme Removed after the Phase End Date or Date_Removed is null
	FROM DataVault.BRG_CASE_STAGES b_cs
	JOIN DataVault.BVW_SAT_PERITO_CASE_PHASE_HISTORY_LATEST cph ON b_cs.HK_CASE_STAGE = cph.HK_CASE_STAGE
	JOIN DataVault.LNK_CASE_CASE_STAGE l_ccs ON b_cs.HK_CASE_STAGE = l_ccs.HK_CASE_STAGE
	JOIN (
		SELECT lct.HK_CASE
			,lct.HK_THEME
			,stc.*
			,--CaseHeaderId,ThemeId,DateAssigned,DateRemoved,isDeleted,
			row_number() OVER (
				PARTITION BY stc.Case_header_Id
				,stc.theme_Id ORDER BY stc.Modified_Date DESC
				) rownum
			,row_number() OVER (
				PARTITION BY lct.LHK_CASE_THEME ORDER BY stc.EFFECTIVE_FROM DESC
					,stc.ROW_VER DESC
					,stc.LOAD_DATETIME DESC
				) rownum_themecase
		FROM DataVault.LNK_CASE_THEME lct
		JOIN DataVault.SAT_PERITO_THEME_CASE stc ON lct.LHK_CASE_THEME = stc.LHK_CASE_THEME
			AND CAST(stc.Date_Assigned AS DATE) <= @EndDate -- my change
		) thc ON thc.HK_CASE = l_ccs.HK_CASE
		AND thc.rownum_themecase = 1
		AND (
			thc.DATE_REMOVED > @EndDate
			OR thc.DATE_REMOVED IS NULL
			)
		AND (CAST(thc.DATE_ASSIGNED AS DATE) <= @EndDate)
	JOIN (
		SELECT ht.THEME_TITLE
			,ht.THEME_CREATED_DATE
			,st.*
			,ROW_NUMBER() OVER (
				PARTITION BY st.HK_THEME ORDER BY st.EFFECTIVE_FROM DESC
					,st.ROW_VER DESC
					,st.LOAD_DATETIME DESC
				) rownum
		FROM DataVault.HUB_THEME ht
		JOIN DataVault.SAT_PERITO_THEME st ON ht.HK_THEME = st.HK_THEME
		) th ON th.HK_THEME = thc.HK_THEME
		AND th.rownum = 1
		AND th.IS_DELETED = 0
	WHERE th.THEME_TITLE NOT LIKE '%Do not use%'
		AND th.THEME_TYPE_LK_NAME = 'Multiple Case Investigation'
		AND b_cs.CASE_STAGE_TYPE IN (
			'Independent Investigation'
			,'Directed/Managed Investigation'
			,'Supervised Investigation'
			)
		AND SUBSTRING(th.THEME_TITLE, 1, 11) <> b_cs.CASE_REFERENCE
	)
	,CTE2
AS (
	SELECT @EndDate AS EFFECTIVE_END_DATE
		,brg_cs.HK_CASE_STAGE
		,brg_cs.CASE_REFERENCE
		--,       brg_cs.CASE_PHASE_HISTORY_ID
		,brg_cs.CASE_STAGE_TYPE
		-- , brg_cs.CASE_STAGE_TYPE_CODE
		,CAST(brg_cs.REFERRAL_RECIEVED_DATETIME AS DATE) AS REFERRAL_RECEIVED_DATE
		,brg_cs.CASE_STAGE_CREATED_DATE
		,s_frap.FINAL_REPORT_APPROVED_DATE
		--             , s_cctd_disco.[DATE_WORKFLOW_JOB_TERMINATED]
		,s_cctd_disco.CCTD_DISCONTINUANCE_DATE
		,s_cs.STATUS_ASSIGNED_DATE
		,s_cs.HISTORICAL_CASE_STATUS
		--, COALESCE( s_frap.FINAL_REPORT_APPROVED_DATE, s_cctd_disco.CCTD_DISCONTINUANCE_DATE, v_ped.ACTUAL_PHASE_END_DATETIME, '9999-12-31' ) AS INV_END_DATE
		,cph.END_DATE
		--, v_ped.MIN_CASE_CLOSED_DATE_AFTER_STAGE_START
		--, v_ped.PHASE_END_DATE
		--, v_ped.ACTUAL_PHASE_END_DATETIME
		,ISNULL(CTE1.THEME_CASE_DATE_ASSIGNED, '9999-12-31') AS THEME_CASE_DATE_ASSIGNED
		,ISNULL(CTE1.THEME_CASE_DATE_REMOVED, '9999-12-31') AS THEME_CASE_DATE_REMOVED
		,CTE1.LEAD_OR_CHILD_CASE_REFERENCE
		,CASE 
			WHEN @EndDate BETWEEN ISNULL(CTE1.THEME_CASE_DATE_ASSIGNED, '9999-12-31')
					AND ISNULL(CTE1.THEME_CASE_DATE_REMOVED, '9999-12-31')
				THEN 0
			ELSE 1
			END AS IS_LEAD_AT_PERIOD_END
		--, CASE
		--   WHEN s_cs.HISTORICAL_CASE_STATUS NOT IN ('Open','Pending') THEN 0  
		--WHEN @EndDate BETWEEN ISNULL (CTE1.THEME_CASE_DATE_ASSIGNED, '9999-12-31' )
		--                                                             AND ISNULL (CTE1.THEME_CASE_DATE_REMOVED, '9999-12-31' ) THEN 0
		--WHEN @EndDate >= CAST(brg_cs.CASE_STAGE_CREATED_DATE AS DATE)
		--                             AND DATEADD(DAY,1,@EndDate) <= COALESCE(s_frap.FINAL_REPORT_APPROVED_DATE, cph.END_DATE, '9999-12-31' ) 
		--THEN 1                               
		--                          ELSE 0 END AS 'ACTIVE_AT_PERIOD_END'                             
		,CASE 
			WHEN s_cs.HISTORICAL_CASE_STATUS NOT IN (
					'Open'
					,'Pending'
					)
				THEN 0
			WHEN @EndDate BETWEEN ISNULL(CTE1.THEME_CASE_DATE_ASSIGNED, '9999-12-31')
					AND ISNULL(CTE1.THEME_CASE_DATE_REMOVED, '9999-12-31')
				THEN 0
			WHEN @EndDate >= CAST(brg_cs.CASE_STAGE_CREATED_DATE AS DATE)
				AND DATEADD(DAY, 1, @EndDate) <= COALESCE(s_frap.FINAL_REPORT_APPROVED_DATE, cph.END_DATE, s_cctd_disco.CCTD_DISCONTINUANCE_DATE, '9999-12-31')
				THEN 1
			ELSE 0
			END AS 'ACTIVE_AT_PERIOD_END'
		,CASE 
			WHEN s_cs.HISTORICAL_CASE_STATUS = 'Closed'
				THEN 0
			WHEN @EndDate BETWEEN ISNULL(CTE1.THEME_CASE_DATE_ASSIGNED, '9999-12-31')
					AND ISNULL(CTE1.THEME_CASE_DATE_REMOVED, '9999-12-31')
				THEN 0
			WHEN @EndDate >= COALESCE(CAST(s_frap.FINAL_REPORT_APPROVED_DATE AS DATE), '9999-12-31')
				AND DATEADD(DAY, 1, @EndDate) <= COALESCE(s_cctd_disco.CCTD_DISCONTINUANCE_DATE, cph.END_DATE, '9999-12-31')
				THEN 1
			ELSE 0
			END AS 'POST_FINAL_AT_PERIOD_END'
		,CASE 
			WHEN @EndDate BETWEEN ISNULL(CTE1.THEME_CASE_DATE_ASSIGNED, '9999-12-31')
					AND ISNULL(CTE1.THEME_CASE_DATE_REMOVED, '9999-12-31')
				THEN 0
			WHEN (
					s_cs.HISTORICAL_CASE_STATUS = 'Closed'
					OR CAST(cph.END_DATE AS DATE) <= @EndDate
					OR CAST(s_cctd_disco.CCTD_DISCONTINUANCE_DATE AS DATE) <= @EndDate
					)
				AND @EndDate >= CAST(brg_cs.CASE_STAGE_CREATED_DATE AS DATE)
				THEN 1
					--WHEN @EndDate >=  CAST(brg_cs.CASE_STAGE_CREATED_DATE AS DATE)
					--                                                             AND DATEADD(DAY,1,@EndDate) >= COALESCE( s_cctd_disco.CCTD_DISCONTINUANCE_DATE, s_cs.DATE_CASE_CLOSED, v_ped.PHASE_END_DATE , '9999-12-31')
					--THEN 1                              
			ELSE 0
			END AS 'CLOSED_AT_PERIOD_END'
		,CASE 
			WHEN @EndDate BETWEEN ISNULL(CTE1.THEME_CASE_DATE_ASSIGNED, '9999-12-31')
					AND ISNULL(CTE1.THEME_CASE_DATE_REMOVED, '9999-12-31')
				THEN 0
			WHEN @EndDate < CAST(brg_cs.CASE_STAGE_CREATED_DATE AS DATE)
				THEN 1
			ELSE 0
			END AS 'NOT_STARTED_AT_PERIOD_END'
		,IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d1.CUMULATIVE_WORK_DAYS_PREV_DEF_1, d1.CUMULATIVE_WORK_DAYS_PREV_DEF_2) - IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d2.CUMULATIVE_WORK_DAYS_NEXT_DEF_1, d2.CUMULATIVE_WORK_DAYS_NEXT_DEF_2) - 1 DURATION_AT_END_DATE
		,CASE 
			WHEN @EndDate >= COALESCE(CAST(s_frap.FINAL_REPORT_APPROVED_DATE AS DATE), '9999-12-31')
				THEN IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d3.CUMULATIVE_WORK_DAYS_PREV_DEF_1, d3.CUMULATIVE_WORK_DAYS_PREV_DEF_2) - IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d2.CUMULATIVE_WORK_DAYS_NEXT_DEF_1, d2.CUMULATIVE_WORK_DAYS_NEXT_DEF_2)
			ELSE NULL
			END AS DURATION_TO_FR
		,CASE 
			WHEN @EndDate >= COALESCE(CAST(s_frap.FINAL_REPORT_APPROVED_DATE AS DATE), '9999-12-31')
				THEN IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d1.CUMULATIVE_WORK_DAYS_PREV_DEF_1, d1.CUMULATIVE_WORK_DAYS_PREV_DEF_2) - IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d3.CUMULATIVE_WORK_DAYS_NEXT_DEF_1, d3.CUMULATIVE_WORK_DAYS_NEXT_DEF_2)
			ELSE NULL
			END AS POST_FINAL_DURATION_AT_END_DATE
		,CASE 
			WHEN @EndDate >= COALESCE(CAST(s_frap.FINAL_REPORT_APPROVED_DATE AS DATE), '9999-12-31')
				THEN IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d4.CUMULATIVE_WORK_DAYS_PREV_DEF_1, d4.CUMULATIVE_WORK_DAYS_PREV_DEF_2) - IIF(brg_cs.REFERRAL_RECIEVED_DATETIME < '2013-04-01', d3.CUMULATIVE_WORK_DAYS_NEXT_DEF_1, d3.CUMULATIVE_WORK_DAYS_NEXT_DEF_2)
			ELSE NULL
			END AS POST_FINAL_DURATION_TO_CLOSURE
	FROM DataVault.BRG_CASE_STAGES brg_cs
	JOIN DataVault.LNK_CASE_CASE_STAGE lnk_ccs ON brg_cs.HK_CASE_STAGE = lnk_ccs.HK_CASE_STAGE
	JOIN DataVault.BVW_ACTUAL_PHASE_END_DATE v_ped ON brg_cs.HK_CASE_STAGE = v_ped.HK_CASE_STAGE
	JOIN DataVault.BVW_SAT_PERITO_CASE_PHASE_HISTORY_LATEST cph ON brg_cs.HK_CASE_STAGE = cph.HK_CASE_STAGE
	LEFT JOIN (
		SELECT a.*
		FROM (
			SELECT *
				,ROW_NUMBER() OVER (
					PARTITION BY HK_CASE_STAGE ORDER BY LOAD_DATETIME DESC
					) rownum
			FROM DataVault.SAT_BR_CCTD_DISCONTINUANCE
			WHERE REPORT_END_DATE = CAST(GETDATE() AS DATE)
			) a
		WHERE a.rownum = 1
		) s_cctd_disco ON brg_cs.HK_CASE_STAGE = s_cctd_disco.HK_CASE_STAGE --AND s_cctd_disco.REPORT_END_DATE = @EndDate
	LEFT JOIN CTE1 ON CTE1.HK_CASE_STAGE = brg_cs.HK_CASE_STAGE
	LEFT JOIN (
		SELECT a.*
		FROM (
			SELECT *
				,CASE 
					WHEN RANK() OVER (
							PARTITION BY HK_CASE_STAGE ORDER BY LOAD_DATETIME DESC
							) = 1
						THEN 'Y'
					ELSE 'N'
					END CURR_FLAG
			FROM [DataVault].[SAT_BR_MAX_OCCURRENCE_DATE_PERFORMANCE_MARKERS]
			) a
		WHERE a.CURR_FLAG = 'Y'
		) s_frap ON brg_cs.HK_CASE_STAGE = s_frap.HK_CASE_STAGE
	LEFT JOIN (
		SELECT a.*
		FROM (
			SELECT *
				,CASE_STATE_LK_NAME AS HISTORICAL_CASE_STATUS
				,ASSIGNED_DATE AS STATUS_ASSIGNED_DATE
				,CASE 
					WHEN RANK() OVER (
							PARTITION BY HK_CASE
							,CASE_STATE_HISTORY_ID ORDER BY ASSIGNED_DATE DESC
								,ROW_VER DESC
								,LOAD_DATETIME DESC
								,ISNULL(REMOVED_DATE, CAST('9999-12-31' AS DATETIME2)) DESC
							) = 1
						THEN 'Y'
					ELSE 'N'
					END CURR_FLAG
			FROM [DataVault].[SAT_PERITO_CASE_STATE_HISTORY]
			) a
		WHERE a.CURR_FLAG = 'Y'
			AND a.IS_DELETED = 0
			AND CONVERT(DATE, a.ASSIGNED_DATE) <= @EndDate
			AND (
				CONVERT(DATE, a.REMOVED_DATE) > @EndDate
				OR a.REMOVED_DATE IS NULL
				)
		) s_cs ON lnk_ccs.HK_CASE = s_cs.HK_CASE
	LEFT JOIN CTE_DATE d1 ON CONVERT(DATE, @EndDate) = d1.DATE
	LEFT JOIN CTE_DATE d2 ON CONVERT(DATE, brg_cs.REFERRAL_RECIEVED_DATETIME) = d2.DATE
	LEFT JOIN CTE_DATE d3 ON CONVERT(DATE, s_frap.FINAL_REPORT_APPROVED_DATE) = d3.DATE
	LEFT JOIN CTE_DATE d4 ON CONVERT(DATE, s_cs.STATUS_ASSIGNED_DATE) = d4.DATE
		AND s_cs.HISTORICAL_CASE_STATUS = 'Closed'
	WHERE brg_cs.CASE_STAGE_TYPE_CODE IN (
			'PHII'
			,'PHSI'
			,'PHMI'
			)
		AND brg_cs.IS_TEST_CASE <> '1' --It is a Test case
		AND brg_cs.IS_HILLSBOROUGH <> '1' --It is a Hillsborough case
		AND cph.IS_DELETED <> '1' --It is not a deleted phase
	)
--ORDER BY CASE_REFERENCE DESC
/* SUMMARY TABLES */
-- SELECT CASE_STAGE_TYPE, 
--             SUM (NOT_STARTED_AT_PERIOD_END) as NOT_STARTED_AT_PERIOD_END , 
--             SUM (ACTIVE_AT_PERIOD_END) as ACTIVE_AT_PERIOD_END , 
--             SUM (POST_FINAL_AT_PERIOD_END) as POST_FINAL_AT_PERIOD_END ,
--             SUM (CLOSED_AT_PERIOD_END) as CLOSED_AT_PERIOD_END 
--FROM CTE2
--   GROUP BY CASE_STAGE_TYPE
/* ONE ROW PER INVESTIGATION */
--   SELECT * FROM CTE2
--   WHERE CASE_STAGE_TYPE = 'Independent Investigation'
--AND CLOSED_AT_PERIOD_END = 1
--AND ( POST_FINAL_AT_PERIOD_END = 1 OR
--ACTIVE_AT_PERIOD_END= 1 )
-- ORDER BY CASE_REFERENCE DESC
--ORDER BY CASE_REFERENCE, FINAL_REPORT_APPROVED_DATE
/* ONE ROW PER INVESTIGATION / STATUS */
SELECT CTE2.EFFECTIVE_END_DATE
	,CTE2.CASE_REFERENCE
	,CTE2.HK_CASE_STAGE
	,CTE2.CASE_STAGE_TYPE
	,'Active' AS [STATUS]
	,DURATION_AT_END_DATE AS DURATION
	,NULL AS POST_FINAL_DURATION
FROM CTE2
WHERE CTE2.ACTIVE_AT_PERIOD_END = '1'

UNION ALL

SELECT CTE2.EFFECTIVE_END_DATE
	,CTE2.CASE_REFERENCE
	,CTE2.HK_CASE_STAGE
	,CTE2.CASE_STAGE_TYPE
	,'Post Final' AS [STATUS]
	,DURATION_TO_FR AS DURATION
	,POST_FINAL_DURATION_AT_END_DATE AS POST_FINAL_DURATION
FROM CTE2
WHERE CTE2.POST_FINAL_AT_PERIOD_END = '1'

UNION ALL

SELECT CTE2.EFFECTIVE_END_DATE
	,CTE2.CASE_REFERENCE
	,CTE2.HK_CASE_STAGE
	,CTE2.CASE_STAGE_TYPE
	,'Closed' AS [STATUS]
	,DURATION_TO_FR AS DURATION
	,POST_FINAL_DURATION_TO_CLOSURE AS POST_FINAL_DURATION
FROM CTE2
WHERE CTE2.CLOSED_AT_PERIOD_END = '1'

UNION ALL

SELECT CTE2.EFFECTIVE_END_DATE
	,CTE2.CASE_REFERENCE
	,CTE2.HK_CASE_STAGE
	,CTE2.CASE_STAGE_TYPE
	,'Not Started' AS [STATUS]
	,NULL AS DURATION
	,NULL AS POST_FINAL_DURATION
FROM CTE2
WHERE CTE2.NOT_STARTED_AT_PERIOD_END = '1'