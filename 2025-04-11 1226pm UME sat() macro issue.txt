
    -- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (
    SELECT a.CUSTOMER_PK, a.HASHDIFF, a.CUSTOMER_NAME, a.CUSTOMER_DOB, a.CUSTOMER_PHONE, a.EFFECTIVE_FROM, a.LOAD_DATE, a.SOURCE
    FROM AUTOMATE_DV_DEV.TEST_TIM_WILSON.STG_CUSTOMER AS a
    WHERE a.CUSTOMER_PK IS NOT NULL
),

latest_records AS (
    SELECT current_records.CUSTOMER_PK, current_records.HASHDIFF, current_records.LOAD_DATE
    FROM AUTOMATE_DV_DEV.TEST_TIM_WILSON.SATELLITE AS current_records
    JOIN (
        SELECT DISTINCT source_data.CUSTOMER_PK
        FROM source_data
    ) AS source_records
        ON source_records.CUSTOMER_PK = current_records.CUSTOMER_PK
    QUALIFY ROW_NUMBER() OVER (
        PARTITION BY current_records.CUSTOMER_PK
        ORDER BY current_records.LOAD_DATE DESC
    ) = 1
),

unique_source_records AS (
    SELECT
        sd.CUSTOMER_PK, sd.HASHDIFF, sd.CUSTOMER_NAME, sd.CUSTOMER_DOB, sd.CUSTOMER_PHONE, sd.EFFECTIVE_FROM, sd.LOAD_DATE, sd.SOURCE
    FROM source_data AS sd
    LEFT OUTER JOIN latest_records AS lr
        ON sd.CUSTOMER_PK = lr.CUSTOMER_PK

    QUALIFY sd.HASHDIFF !=
        LAG(sd.HASHDIFF, 1,
            COALESCE(
                lr.HASHDIFF,
                CAST('FFFFFFFF' AS BINARY(16))
            )
        ) OVER (
            PARTITION BY sd.CUSTOMER_PK
            ORDER BY sd.LOAD_DATE ASC,
                     sd.EFFECTIVE_FROM ASC
        )
    AND sd.LOAD_DATE != lr.LOAD_DATE
)
SELECT * FROM unique_source_records
,

records_to_insert AS (
    SELECT usr.CUSTOMER_PK, usr.HASHDIFF, usr.CUSTOMER_NAME, usr.CUSTOMER_DOB, usr.CUSTOMER_PHONE, usr.EFFECTIVE_FROM, usr.LOAD_DATE, usr.SOURCE
    FROM unique_source_records AS usr
)

SELECT * FROM records_to_insert
;


    -- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (
    SELECT a.CUSTOMER_PK, a.HASHDIFF, a.CUSTOMER_NAME, a.CUSTOMER_DOB, a.CUSTOMER_PHONE, a.EFFECTIVE_FROM, a.LOAD_DATE, a.SOURCE
    FROM AUTOMATE_DV_DEV.TEST_TIM_WILSON.STG_CUSTOMER AS a
    WHERE a.CUSTOMER_PK IS NOT NULL
),

unique_source_records AS (
    SELECT
        sd.CUSTOMER_PK, sd.HASHDIFF, sd.CUSTOMER_NAME, sd.CUSTOMER_DOB, sd.CUSTOMER_PHONE, sd.EFFECTIVE_FROM, sd.LOAD_DATE, sd.SOURCE
    FROM source_data AS sd

    QUALIFY sd.HASHDIFF !=
        LAG(sd.HASHDIFF, 1, CAST('FFFFFFFF' AS BINARY(16))) OVER (
            PARTITION BY sd.CUSTOMER_PK
            ORDER BY sd.LOAD_DATE ASC,
                     sd.EFFECTIVE_FROM ASC
        )
),

records_to_insert AS (
    SELECT usr.CUSTOMER_PK, usr.HASHDIFF, usr.CUSTOMER_NAME, usr.CUSTOMER_DOB, usr.CUSTOMER_PHONE, usr.EFFECTIVE_FROM, usr.LOAD_DATE, usr.SOURCE
    FROM unique_source_records AS usr
)

SELECT * FROM records_to_insert
;