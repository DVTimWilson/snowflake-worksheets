/*
// Marinos' original code

--DATE DIMENSION
SET DEFAULT_START_DATE = '2023-11-01 00:00:01';
SET END_OF_CALENDAR_TIMESTAMP = '2023-11-01 00:00:04';
SET TOTAL_SECONDS = (SELECT DATEDIFF(SECOND, $DEFAULT_START_DATE, $END_OF_CALENDAR_TIMESTAMP));

    WITH DATE_RECORDS AS (
        SELECT
              DATEADD(SECOND, SEQ4(), $DEFAULT_START_DATE) AS MY_DATE
            --, TO_TIMESTAMP_NTZ(MY_DATE) as FULL_DATE
        FROM
            TABLE(GENERATOR(ROWCOUNT=>$TOTAL_SECONDS))
    ),
    CALENDAR AS (
        SELECT
          a.MY_DATE
        --, FULL_DATE
        , DAYOFYEAR(MY_DATE) AS DAY_OF_YEAR
        , DAYOFMONTH(MY_DATE) AS DAY_OF_MONTH
        , DAYOFWEEK(MY_DATE) AS DAY_OF_WEEK_AS_NUMBER
        , MONTH(MY_DATE) AS MONTH_NUMBER
        , MONTHNAME(MY_DATE) AS MONTH_NAME
        , WEEKOFYEAR(MY_DATE)  AS WEEK_OF_YEAR
        , TRANSACTION_TIMESTAMP
        , TO_DATE(TRANSACTION_TIMESTAMP) AS DATE_OF_TRANSACTION
        , HOUR(TO_TIME(TRANSACTION_TIMESTAMP)) AS HOUR
        , DAYNAME(TRANSACTION_TIMESTAMP) AS DAY_OF_WEEK
        , TO_DATE(DATEADD('DAY', (8 + 1 - DAYOFWEEK(TRANSACTION_TIMESTAMP)) % 7, TRANSACTION_TIMESTAMP)) AS BUSINESS_WEEK_END_DATE
        , LAST_DAY(TRANSACTION_TIMESTAMP, 'MONTH') AS MONTH_END_DATE
        FROM
            DATE_RECORDS AS a
        LEFT JOIN
            SBX_MARINOS_IOANNOU.RAW_VAULT.SAT_RT_POS_REALTIMEPOS_PUMP_HEADER AS b
        ON a.MY_DATE = b.TRANSACTION_TIMESTAMP
        ORDER BY
            MY_DATE ASC
    )
    SELECT *
    FROM CALENDAR;
*/
    
SHOW PARAMETERS
;

SET start_timestamp = TO_TIMESTAMP('2023-11-01 00:00:01.000000');
SET end_timestamp   = TO_TIMESTAMP('2023-11-01 00:00:04.000000');
-- ALTER SESSION SET WEEK_START = 0;

WITH cte_timestamps (dim_timestamp) AS (
  SELECT TO_TIMESTAMP($start_timestamp)
  UNION ALL
  SELECT TO_TIMESTAMP(DATEADD(second, 1, dim_timestamp)) --or week, month, week, hour, minute, second instead of day
  FROM  cte_timestamps
  WHERE dim_timestamp < TO_TIMESTAMP($end_timestamp)
)

SELECT *
,TO_DATE(DATEADD('DAY', (2 + 7 - DAYOFWEEK(dim_timestamp)) % 7, dim_timestamp)) AS BUSINESS_WEEK_END_DATE_TUESDAY
,TO_DATE(DATEADD('DAY', (5 + 7 - DAYOFWEEK(dim_timestamp)) % 7, dim_timestamp)) AS BUSINESS_WEEK_END_DATE_FRIDAY
,DATE_TRUNC('WEEK', dim_timestamp) AS WEEK_START_DATE
,LAST_DAY(dim_timestamp, 'WEEK') AS WEEK_END_DATE
FROM cte_timestamps
;
